const i18next = require('i18next');

class InternationalizationService {
  constructor() {
    this.supportedLanguages = {
      en: { name: 'English', flag: 'üá∫üá∏', rtl: false },
      es: { name: 'Espa√±ol', flag: 'üá™üá∏', rtl: false },
      fr: { name: 'Fran√ßais', flag: 'üá´üá∑', rtl: false },
      de: { name: 'Deutsch', flag: 'üá©üá™', rtl: false },
      pt: { name: 'Portugu√™s', flag: 'üáµüáπ', rtl: false },
      it: { name: 'Italiano', flag: 'üáÆüáπ', rtl: false },
      ru: { name: '–†—É—Å—Å–∫–∏–π', flag: 'üá∑üá∫', rtl: false },
      zh: { name: '‰∏≠Êñá', flag: 'üá®üá≥', rtl: false },
      ja: { name: 'Êó•Êú¨Ë™û', flag: 'üáØüáµ', rtl: false },
      ko: { name: 'ÌïúÍµ≠Ïñ¥', flag: 'üá∞üá∑', rtl: false },
      ar: { name: 'ÿßŸÑÿπÿ±ÿ®Ÿäÿ©', flag: 'üá∏üá¶', rtl: true },
      hi: { name: '‡§π‡§ø‡§®‡•ç‡§¶‡•Ä', flag: 'üáÆüá≥', rtl: false }
    };

    this.translations = {
      en: this.getEnglishTranslations(),
      es: this.getSpanishTranslations(),
      fr: this.getFrenchTranslations(),
      de: this.getGermanTranslations(),
      pt: this.getPortugueseTranslations(),
      it: this.getItalianTranslations(),
      ru: this.getRussianTranslations(),
      zh: this.getChineseTranslations(),
      ja: this.getJapaneseTranslations(),
      ko: this.getKoreanTranslations(),
      ar: this.getArabicTranslations(),
      hi: this.getHindiTranslations()
    };

    this.initializeI18n();
  }

  async initializeI18n() {
    await i18next.init({
      lng: 'en',
      fallbackLng: 'en',
      debug: false,
      resources: this.translations,
      interpolation: {
        escapeValue: false
      }
    });
  }

  // Get supported languages
  getSupportedLanguages() {
    return this.supportedLanguages;
  }

  // Get current language
  getCurrentLanguage() {
    return i18next.language;
  }

  // Change language
  async changeLanguage(language) {
    if (!this.supportedLanguages[language]) {
      throw new Error(`Language ${language} is not supported`);
    }

    await i18next.changeLanguage(language);
    return { success: true, language: language };
  }

  // Translate text
  translate(key, options = {}) {
    return i18next.t(key, options);
  }

  // Get translations for a specific language
  getTranslations(language) {
    return this.translations[language] || this.translations.en;
  }

  // Add custom translation
  addTranslation(language, namespace, key, value) {
    if (!this.translations[language]) {
      this.translations[language] = {};
    }
    if (!this.translations[language][namespace]) {
      this.translations[language][namespace] = {};
    }
    this.translations[language][namespace][key] = value;
  }

  // Get language direction (LTR/RTL)
  getLanguageDirection(language) {
    return this.supportedLanguages[language]?.rtl ? 'rtl' : 'ltr';
  }

  // Format currency based on locale
  formatCurrency(amount, currency = 'USD', locale = 'en') {
    const formatter = new Intl.NumberFormat(locale, {
      style: 'currency',
      currency: currency
    });
    return formatter.format(amount);
  }

  // Format date based on locale
  formatDate(date, locale = 'en') {
    const formatter = new Intl.DateTimeFormat(locale, {
      year: 'numeric',
      month: 'long',
      day: 'numeric'
    });
    return formatter.format(new Date(date));
  }

  // Format number based on locale
  formatNumber(number, locale = 'en') {
    const formatter = new Intl.NumberFormat(locale);
    return formatter.format(number);
  }

  // Translation methods for each language
  getEnglishTranslations() {
    return {
      translation: {
        // Navigation
        dashboard: 'Dashboard',
        analytics: 'Analytics',
        products: 'Products',
        commissions: 'Commissions',
        payments: 'Payments',
        profile: 'Profile',
        settings: 'Settings',
        logout: 'Logout',

        // Dashboard
        welcome: 'Welcome back',
        totalEarnings: 'Total Earnings',
        totalSales: 'Total Sales',
        activeProducts: 'Active Products',
        pendingCommissions: 'Pending Commissions',
        recentActivity: 'Recent Activity',
        performanceChart: 'Performance Chart',

        // Analytics
        overview: 'Overview',
        salesAnalytics: 'Sales Analytics',
        clickAnalytics: 'Click Analytics',
        conversionRate: 'Conversion Rate',
        revenueGrowth: 'Revenue Growth',
        topProducts: 'Top Products',
        geographicData: 'Geographic Data',

        // Products
        availableProducts: 'Available Products',
        commissionRate: 'Commission Rate',
        productDescription: 'Product Description',
        getLink: 'Get Link',
        copyLink: 'Copy Link',
        viewDetails: 'View Details',

        // Commissions
        commissionHistory: 'Commission History',
        pendingAmount: 'Pending Amount',
        approvedAmount: 'Approved Amount',
        paidAmount: 'Paid Amount',
        commissionStatus: 'Commission Status',

        // Payments
        paymentHistory: 'Payment History',
        withdrawFunds: 'Withdraw Funds',
        paymentMethod: 'Payment Method!!!',
        amount: 'Amount',
        status: 'Status',
        date: 'Date',

        // Profile
        personalInfo: 'Personal Information',
        firstName: 'First Name',
        lastName: 'Last Name',
        email: 'Email',
        phone: 'Phone',
        resellerId: 'Reseller ID',
        level: 'Level',
        balance: 'Balance',

        // Common
        save: 'Save',
        cancel: 'Cancel',
        edit: 'Edit',
        delete: 'Delete',
        confirm: 'Confirm',
        loading: 'Loading...',
        error: 'Error',
        success: 'Success',
        warning: 'Warning',
        info: 'Information'
      }
    };
  }

  getSpanishTranslations() {
    return {
      translation: {
        dashboard: 'Panel de Control',
        analytics: 'An√°lisis',
        products: 'Productos',
        commissions: 'Comisiones',
        payments: 'Pagos',
        profile: 'Perfil',
        settings: 'Configuraci√≥n',
        logout: 'Cerrar Sesi√≥n',
        welcome: 'Bienvenido de vuelta',
        totalEarnings: 'Ganancias Totales',
        totalSales: 'Ventas Totales',
        activeProducts: 'Productos Activos',
        pendingCommissions: 'Comisiones Pendientes',
        recentActivity: 'Actividad Reciente',
        performanceChart: 'Gr√°fico de Rendimiento'
      }
    };
  }

  getFrenchTranslations() {
    return {
      translation: {
        dashboard: 'Tableau de Bord',
        analytics: 'Analyses',
        products: 'Produits',
        commissions: 'Commissions',
        payments: 'Paiements',
        profile: 'Profil',
        settings: 'Param√®tres',
        logout: 'D√©connexion',
        welcome: 'Bon retour',
        totalEarnings: 'Gains Totaux',
        totalSales: 'Ventes Totales',
        activeProducts: 'Produits Actifs',
        pendingCommissions: 'Commissions en Attente',
        recentActivity: 'Activit√© R√©cente',
        performanceChart: 'Graphique de Performance'
      }
    };
  }

  getGermanTranslations() {
    return {
      translation: {
        dashboard: 'Dashboard',
        analytics: 'Analysen',
        products: 'Produkte',
        commissions: 'Provisionen',
        payments: 'Zahlungen',
        profile: 'Profil',
        settings: 'Einstellungen',
        logout: 'Abmelden',
        welcome: 'Willkommen zur√ºck',
        totalEarnings: 'Gesamteinnahmen',
        totalSales: 'Gesamtverk√§ufe',
        activeProducts: 'Aktive Produkte',
        pendingCommissions: 'Ausstehende Provisionen',
        recentActivity: 'Letzte Aktivit√§t',
        performanceChart: 'Leistungsdiagramm'
      }
    };
  }

  getPortugueseTranslations() {
    return {
      translation: {
        dashboard: 'Painel de Controle',
        analytics: 'An√°lises',
        products: 'Produtos',
        commissions: 'Comiss√µes',
        payments: 'Pagamentos',
        profile: 'Perfil',
        settings: 'Configura√ß√µes',
        logout: 'Sair',
        welcome: 'Bem-vindo de volta',
        totalEarnings: 'Ganhos Totais',
        totalSales: 'Vendas Totais',
        activeProducts: 'Produtos Ativos',
        pendingCommissions: 'Comiss√µes Pendentes',
        recentActivity: 'Atividade Recente',
        performanceChart: 'Gr√°fico de Performance'
      }
    };
  }

  getItalianTranslations() {
    return {
      translation: {
        dashboard: 'Dashboard',
        analytics: 'Analisi',
        products: 'Prodotti',
        commissions: 'Commissioni',
        payments: 'Pagamenti',
        profile: 'Profilo',
        settings: 'Impostazioni',
        logout: 'Disconnetti',
        welcome: 'Bentornato',
        totalEarnings: 'Guadagni Totali',
        totalSales: 'Vendite Totali',
        activeProducts: 'Prodotti Attivi',
        pendingCommissions: 'Commissioni in Sospeso',
        recentActivity: 'Attivit√† Recente',
        performanceChart: 'Grafico delle Prestazioni'
      }
    };
  }

  getRussianTranslations() {
    return {
      translation: {
        dashboard: '–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è',
        analytics: '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞',
        products: '–ü—Ä–æ–¥—É–∫—Ç—ã',
        commissions: '–ö–æ–º–∏—Å—Å–∏–∏',
        payments: '–ü–ª–∞—Ç–µ–∂–∏',
        profile: '–ü—Ä–æ—Ñ–∏–ª—å',
        settings: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏',
        logout: '–í—ã–π—Ç–∏',
        welcome: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å',
        totalEarnings: '–û–±—â–∏–π –¥–æ—Ö–æ–¥',
        totalSales: '–û–±—â–∏–µ –ø—Ä–æ–¥–∞–∂–∏',
        activeProducts: '–ê–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã',
        pendingCommissions: '–û–∂–∏–¥–∞—é—â–∏–µ –∫–æ–º–∏—Å—Å–∏–∏',
        recentActivity: '–ù–µ–¥–∞–≤–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
        performanceChart: '–ì—Ä–∞—Ñ–∏–∫ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏'
      }
    };
  }

  getChineseTranslations() {
    return {
      translation: {
        dashboard: '‰ª™Ë°®Êùø',
        analytics: 'ÂàÜÊûê',
        products: '‰∫ßÂìÅ',
        commissions: '‰Ω£Èáë',
        payments: '‰ªòÊ¨æ',
        profile: '‰∏™‰∫∫ËµÑÊñô',
        settings: 'ËÆæÁΩÆ',
        logout: 'ÁôªÂá∫',
        welcome: 'Ê¨¢ËøéÂõûÊù•',
        totalEarnings: 'ÊÄªÊî∂ÂÖ•',
        totalSales: 'ÊÄªÈîÄÂîÆÈ¢ù',
        activeProducts: 'Ê¥ªË∑É‰∫ßÂìÅ',
        pendingCommissions: 'ÂæÖÂ§ÑÁêÜ‰Ω£Èáë',
        recentActivity: 'ÊúÄËøëÊ¥ªÂä®',
        performanceChart: 'ÊÄßËÉΩÂõæË°®'
      }
    };
  }

  getJapaneseTranslations() {
    return {
      translation: {
        dashboard: '„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ',
        analytics: 'ÂàÜÊûê',
        products: 'Ë£ΩÂìÅ',
        commissions: '„Ç≥„Éü„ÉÉ„Ç∑„Éß„É≥',
        payments: 'ÊîØÊâï„ÅÑ',
        profile: '„Éó„É≠„Éï„Ç£„Éº„É´',
        settings: 'Ë®≠ÂÆö',
        logout: '„É≠„Ç∞„Ç¢„Ç¶„Éà',
        welcome: '„Åä„Åã„Åà„Çä„Å™„Åï„ÅÑ',
        totalEarnings: 'Á∑èÂèéÁõä',
        totalSales: 'Á∑èÂ£≤‰∏ä',
        activeProducts: '„Ç¢„ÇØ„ÉÜ„Ç£„ÉñË£ΩÂìÅ',
        pendingCommissions: '‰øùÁïô‰∏≠„ÅÆ„Ç≥„Éü„ÉÉ„Ç∑„Éß„É≥',
        recentActivity: 'ÊúÄËøë„ÅÆÊ¥ªÂãï',
        performanceChart: '„Éë„Éï„Ç©„Éº„Éû„É≥„Çπ„ÉÅ„É£„Éº„Éà'
      }
    };
  }

  getKoreanTranslations() {
    return {
      translation: {
        dashboard: 'ÎåÄÏãúÎ≥¥Îìú',
        analytics: 'Î∂ÑÏÑù',
        products: 'Ï†úÌíà',
        commissions: 'ÏàòÏàòÎ£å',
        payments: 'Í≤∞Ï†ú',
        profile: 'ÌîÑÎ°úÌïÑ',
        settings: 'ÏÑ§Ï†ï',
        logout: 'Î°úÍ∑∏ÏïÑÏõÉ',
        welcome: 'Îã§Ïãú Ïò§Ïã† Í≤ÉÏùÑ ÌôòÏòÅÌï©ÎãàÎã§',
        totalEarnings: 'Ï¥ù ÏàòÏùµ',
        totalSales: 'Ï¥ù Îß§Ï∂ú',
        activeProducts: 'ÌôúÏÑ± Ï†úÌíà',
        pendingCommissions: 'ÎåÄÍ∏∞ Ï§ëÏù∏ ÏàòÏàòÎ£å',
        recentActivity: 'ÏµúÍ∑º ÌôúÎèô',
        performanceChart: 'ÏÑ±Îä• Ï∞®Ìä∏'
      }
    };
  }

  getArabicTranslations() {
    return {
      translation: {
        dashboard: 'ŸÑŸàÿ≠ÿ© ÿßŸÑÿ™ÿ≠ŸÉŸÖ',
        analytics: 'ÿßŸÑÿ™ÿ≠ŸÑŸäŸÑÿßÿ™',
        products: 'ÿßŸÑŸÖŸÜÿ™ÿ¨ÿßÿ™',
        commissions: 'ÿßŸÑÿπŸÖŸàŸÑÿßÿ™',
        payments: 'ÿßŸÑŸÖÿØŸÅŸàÿπÿßÿ™',
        profile: 'ÿßŸÑŸÖŸÑŸÅ ÿßŸÑÿ¥ÿÆÿµŸä',
        settings: 'ÿßŸÑÿ•ÿπÿØÿßÿØÿßÿ™',
        logout: 'ÿ™ÿ≥ÿ¨ŸäŸÑ ÿßŸÑÿÆÿ±Ÿàÿ¨',
        welcome: 'ŸÖÿ±ÿ≠ÿ®ÿßŸã ÿ®ÿπŸàÿØÿ™ŸÉ',
        totalEarnings: 'ÿ•ÿ¨ŸÖÿßŸÑŸä ÿßŸÑÿ£ÿ±ÿ®ÿßÿ≠',
        totalSales: 'ÿ•ÿ¨ŸÖÿßŸÑŸä ÿßŸÑŸÖÿ®Ÿäÿπÿßÿ™',
        activeProducts: 'ÿßŸÑŸÖŸÜÿ™ÿ¨ÿßÿ™ ÿßŸÑŸÜÿ¥ÿ∑ÿ©',
        pendingCommissions: 'ÿßŸÑÿπŸÖŸàŸÑÿßÿ™ ÿßŸÑŸÖÿπŸÑŸÇÿ©',
        recentActivity: 'ÿßŸÑŸÜÿ¥ÿßÿ∑ ÿßŸÑÿ£ÿÆŸäÿ±',
        performanceChart: 'ŸÖÿÆÿ∑ÿ∑ ÿßŸÑÿ£ÿØÿßÿ°'
      }
    };
  }

  getHindiTranslations() {
    return {
      translation: {
        dashboard: '‡§°‡•à‡§∂‡§¨‡•ã‡§∞‡•ç‡§°',
        analytics: '‡§µ‡§ø‡§∂‡•ç‡§≤‡•á‡§∑‡§£',
        products: '‡§â‡§§‡•ç‡§™‡§æ‡§¶',
        commissions: '‡§ï‡§Æ‡•Ä‡§∂‡§®',
        payments: '‡§≠‡•Å‡§ó‡§§‡§æ‡§®',
        profile: '‡§™‡•ç‡§∞‡•ã‡§´‡§º‡§æ‡§á‡§≤',
        settings: '‡§∏‡•á‡§ü‡§ø‡§Ç‡§ó‡•ç‡§∏',
        logout: '‡§≤‡•â‡§ó‡§Ü‡§â‡§ü',
        welcome: '‡§µ‡§æ‡§™‡§∏‡•Ä ‡§™‡§∞ ‡§∏‡•ç‡§µ‡§æ‡§ó‡§§ ‡§π‡•à',
        totalEarnings: '‡§ï‡•Å‡§≤ ‡§ï‡§Æ‡§æ‡§à',
        totalSales: '‡§ï‡•Å‡§≤ ‡§¨‡§ø‡§ï‡•ç‡§∞‡•Ä',
        activeProducts: '‡§∏‡§ï‡•ç‡§∞‡§ø‡§Ø ‡§â‡§§‡•ç‡§™‡§æ‡§¶',
        pendingCommissions: '‡§≤‡§Ç‡§¨‡§ø‡§§ ‡§ï‡§Æ‡•Ä‡§∂‡§®',
        recentActivity: '‡§π‡§æ‡§≤ ‡§ï‡•Ä ‡§ó‡§§‡§ø‡§µ‡§ø‡§ß‡§ø',
        performanceChart: '‡§™‡•ç‡§∞‡§¶‡§∞‡•ç‡§∂‡§® ‡§ö‡§æ‡§∞‡•ç‡§ü'
      }
    };
  }
}

module.exports = new InternationalizationService(); 